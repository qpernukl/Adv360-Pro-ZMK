#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        commt_and_push: commt_and_push {
            compatible = "zmk,behavior-hold-tap";
            label = "COMMT_AND_PUSH";
            bindings = <&push_changes>, <&commit_changes>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
        };
    };

    macros {
        launch_debug: launch_debug {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(F9)>;
            label = "LAUNCH_DEBUG";
        };

        commit_changes: commit_changes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(K)>;
            label = "COMMIT_CHANGES";
        };

        push_changes: push_changes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(K))>;
            label = "PUSH_CHANGES";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL   &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &tog 1                                                                       &mo 3      &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB     &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                                        &none      &kp Y   &kp U   &kp I      &kp O     &kp P     &kp BSLH
&kp DELETE  &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LGUI  &kp LALT             &none  &none  &kp RCTRL  &kp RGUI   &none      &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT   &kp Z      &kp X     &kp C     &kp V      &kp B   &none     &none     &commt_and_push 0 0  &none  &none  &tog 4     &none      &none      &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&mo 2       &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp ESC   &kp END                            &kp PG_DN  &kp ENTER  &kp SPACE          &kp UP  &kp DOWN   &kp LBKT  &kp RBKT  &mo 2
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                             &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                              &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT  &none  &none  &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B   &none     &none      &kp HOME  &none  &none  &kp PG_UP  &none      &none      &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END                 &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2     &kp F3    &kp F4      &kp F5     &kp F6  &tog 1                                                &mo 3   &kp F7  &kp F8                &kp F9                     &kp F10         &kp F11  &kp F12
&trans  &trans     &trans    &trans      &trans     &trans  &none                                                 &none   &trans  &kp LEFT_BRACE        &kp LS(RIGHT_BRACKET)      &trans          &trans   &trans
&trans  &kp EQUAL  &kp PLUS  &kp DOLLAR  &kp CARET  &trans  &none   &trans  &trans  &none  &none  &trans  &trans  &none   &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE            &kp UNDERSCORE  &trans   &trans
&trans  &trans     &trans    &trans      &trans     &trans  &none   &none   &trans  &none  &none  &trans  &none   &none   &trans  &kp LEFT_PARENTHESIS  &kp LS(RIGHT_PARENTHESIS)  &trans          &trans   &trans
&trans  &trans     &trans    &trans      &trans             &trans  &trans  &trans                &trans  &trans  &trans          &trans                &trans                     &trans          &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                                                 &trans                  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&none  &none         &none         &none         &none         &none         &bootloader                                                                           &bootloader             &none         &none         &none         &none         &none         &none
&none  &none         &none         &none         &none         &none         &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR  &bt BT_CLR  &none  &none  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5  &none         &none         &none         &none         &none         &none
&none  &none         &none         &none         &none         &none         &none                   &none       &none       &none  &none  &none       &none       &none                   &none         &none         &none         &none         &none         &none
&none  &none         &none         &bl BL_INC    &bl BL_DEC                  &rgb_ug RGB_TOG         &bl BL_TOG  &none                     &none       &bl BL_TOG  &rgb_ug RGB_TOG                       &bl BL_INC    &bl BL_DEC    &none         &none         &none
            >;
        };

        Symbol {
            bindings = <
&trans         &kp APOS      &kp LS(LPAR)   &kp LS(RPAR)   &kp SEMI      &kp COMMA      &trans                                                                  &trans  &trans  &trans                &trans           &trans         &trans                 &trans
&kp LS(EXCL)   &kp LS(LBRC)  &kp LS(TILDE)  &kp LS(DQT)    &kp LS(RBRC)  &kp LS(QMARK)  &trans                                                                  &trans  &trans  &kp SEMICOLON         &kp RIGHT_SHIFT  &kp RIGHT_ALT  &trans                 &trans
&kp LS(POUND)  &kp LCTRL     &kp EQUAL      &kp LS(UNDER)  &kp LS(DLLR)  &kp LS(STAR)   &trans    &kp LS(PRCNT)  &kp LS(COLON)  &trans  &trans  &trans  &trans  &trans  &trans  &kp DOT               &kp BSPC         &kp TAB        &kp SPACE              &kp ENTER
&kp LS(AT)     &kp LS(LT)    &kp LS(PIPE)   &kp MINUS      &kp LS(GT)    &kp FSLH       &trans    &trans         &kp LS(STAR)   &trans  &trans  &tog 0  &trans  &trans  &trans  &kp FSLH              &kp DEL          &kp LS(TAB)    &trans                 &trans
&kp LS(TILDE)  &kp LS(AMPS)  &kp LBKT       &kp RBKT       &kp LS(PLUS)                 &kp FSLH  &kp DOT        &kp SEMI                       &trans  &tog 0  &trans          &kp LEFT_PARENTHESIS  &kp LBKT         &kp RBKT       &kp RIGHT_PARENTHESIS  &trans
            >;
        };
    };
};
